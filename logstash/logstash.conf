input {
  snmp {
   # diskusage(KB), cpuusage(%), memusage(%)
    get => ["1.3.6.1.4.1.12356.101.4.1.6.0", "1.3.6.1.4.1.12356.101.4.1.3.0", "1.3.6.1.4.1.12356.101.4.1.4.0"]
   # host ip is fortigate VM ip
    hosts => [{host => "udp:10.99.1.200/161" community => "public"}]
    tags => ["snmp"]
  }
  udp {
    port => 5140
    tags => ["fortinet"]
  }

 file {
  path => "/data/*.csv"
  start_position => "beginning"
  sincedb_path => "/dev/null"
  tags => ["csv"]
 }
 file {
  path => "/data/forti-*"
  start_position => "beginning"
  sincedb_path => "/dev/null"
  tags => ["demo"]
 }
}

filter {
    if "csv" in [tags] {
        csv {
           autodetect_column_names => true
        }
    }
    if "snmp" in [tags] {
          mutate {
    rename => { "iso.org.dod.internet.private.enterprises.12356.101.4.1.3.0" => "cpu_usage" }
    rename => { "iso.org.dod.internet.private.enterprises.12356.101.4.1.4.0" => "mem_usage" }
    rename => { "iso.org.dod.internet.private.enterprises.12356.101.4.1.6.0" => "disk_usage" }
  }
    }
 if "demo" in [tags] or "fortinet" in [tags] {
    grok {
      match =>  ["message" , "<%{INT}>%{GREEDYDATA:mess}"]
          }
    kv {
       source => "mess"
    }
    mutate {
        add_field => { "timestamp" => "%{date} %{time}" }
    }
    date {
      timezone => "Asia/Taipei"
      match => [ "timestamp", "YYYY-MM-dd HH:mm:ss" ]
    }
   mutate {
     remove_field => [ "mess" ]
   }

 mutate {
    rename => { "srcport" => "src_port" }
    rename => { "srcip" => "src_ip" }
    rename => { "dstip" => "dest_ip" }
    rename => { "dstport" => "dest_port" }
    rename => { "srccountry" => "src_country" }
    rename => { "dstcountry" => "dest_country" }
    rename => { "srcintf" => "src_intf" }
    rename => { "dstintf" => "dest_intf" }
    rename => { "rcvdbyte" => "bytes_in" }
    rename => { "sentpkt" => "packets_out" }
    rename => { "rcvdpkt" => "packets_in" }
    rename => { "sentbyte" => "bytes_out" }
  }
        geoip {
                source => "src_ip"
        }
    mutate {
      convert => { "bytes_in" => "integer" }
      convert => { "bytes_out" => "integer" }
      convert => { "packets_in" => "integer" }
      convert => { "packets_out" => "integer" }
    }
 }
}

output {
 if    "csv" in [tags] {
    elasticsearch {
    hosts => ["https://odfe-node1:9200"]
    user => "logstash"
    password => "logstash"
    index => "logstash-csv"
    ssl => true
    ssl_certificate_verification => false
    ilm_enabled => false
    }
  }
 if    "demo" in [tags] or "fortinet" in [tags] or "snmp" in [tags] {
    elasticsearch {
    hosts => ["https://odfe-node1:9200"]
    user => "logstash"
    password => "logstash"
    index => "logstash-fortigate-%{+YYYY.MM.dd}"
    ssl => true
    ssl_certificate_verification => false
    ilm_enabled => false
    }
  }
  stdout { codec => rubydebug }
}
